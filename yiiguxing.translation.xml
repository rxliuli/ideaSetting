<application>
  <component name="AppStorage">
    <histories>
      <item value="Takes a MongoDB JSON string to define the actual query to be executed. This one will take precedence over the * method name then." />
      <item value="akes a MongoDB JSON string to define the actual query to be executed. This one will take precedence over the * method name then." />
      <item value="Defines the fields that should be returned for the given query. Note that only these fields will make it into the * domain object returned." />
      <item value="Returns a copy of this {@link ExampleMatcher} with the specified {@code propertyPaths}. This instance is immutable * and unaffected by this method call." />
      <item value="java.lang.AssertionError: Expecting actual not to be empty" />
      <item value="org.springframework.data.repository.query.ParameterOutOfBoundsException: Invalid parameter index! You seem to have declared too little query method parameters!" />
      <item value="Greater Than Equal" />
      <item value="find User Info Log By User Id Equals And Log Time Greater Than Equal" />
      <item value="Database name must not be empty!" />
      <item value="Unsatisfied dependency expressed through field 'mongoOperations'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoTemplate' defined in class path resource" />
      <item value="Error creating bean with name 'userInfoServiceImpl': Unsatisfied dependency expressed through field 'userInfoLogRepository';" />
      <item value="Constant for default style pattern. Its value is MEDIUM." />
      <item value="Caused by: java.lang.IllegalArgumentException: Illegal pattern character 'T'" />
      <item value="Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.ExceptionInInitializerError] with root cause" />
      <item value="Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.rxliuli.example.springbootmybatisplusmongo.util.JsonUtil] with root cause" />
      <item value="Annotation to activate MongoDB repositories. If no base package is configured through either {@link #value()}, * {@link #basePackages()} or {@link #basePackageClasses()} it will trigger scanning of the package of annotated class." />
      <item value="Enable Mongo Repositories" />
      <item value="defined in file [D:\Text\spring-boot\spring-boot-mybatis-plus-mongo\out\production\classes\com\rxliuli\example\springbootmybatisplusmongo\repository\UserInfoLogRepository.class]] bound" />
      <item value="Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'userInfoLogRepository' defined in null" />
      <item value="2019-02-22 16:35:18 JRebel: ERROR Class 'net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection' could not be processed by org.zeroturnaround.javarebel.integration.proxy.bytebuddy.ClassInjectorUsingCBP@null: org.zeroturnaround.bundled.javassist.NotFoundException: inject(..) is not found in net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection" />
      <item value="Caused by: org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: &quot;PRIMARY KEY ON SPRING_BOOT_MYBATIS_PLUS_MONGO.USER_INFO(ID)&quot;; SQL statement:" />
      <item value="create table user_info ( id bigint primary key not null comment '用户 id', name varchar(20) not null comment '名字', age tinyint not null comment '年龄', sex bool not null comment '性别' ) comment '用户表' [42001-197]" />
      <item value="Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement &quot;CREATE DATABASE[*] SPRING_BOOT_MYBATIS_PLUS_MONGO &quot;; expected &quot;OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX&quot;; SQL statement:" />
      <item value="Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement &quot;CREATE DATABASE[*] IF NOT EXISTS SPRING_BOOT_MYBATIS_PLUS_MONGO &quot;; expected &quot;OR, FORCE, VIEW, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, DATATYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL, GLOBAL, TEMP, TEMPORARY, TABLE, SYNONYM, PRIMARY, UNIQUE, HASH, SPATIAL, INDEX&quot;; SQL statement:" />
      <item value="use spring_boot_mybatis_plus_mongo; nested exception is org.h2.jdbc.JdbcSQLException: Schema &quot;SPRING_BOOT_MYBATIS_PLUS_MONGO&quot; not found; SQL statement:" />
      <item value="Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [db/schema-h2.sql]: use spring_boot_mybatis_plus_mongo; nested exception is org.h2.jdbc.JdbcSQLException: Schema &quot;SPRING_BOOT_MYBATIS_PLUS_MONGO&quot; not found; SQL statement:" />
      <item value="Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [db/schema-h2.sql]: use spring_boot_mybatis_plus_mongo; nested exception is org.h2.jdbc.JdbcSQLException: Schema &quot;SPRING_BOOT_MYBATIS_PLUS_MONGO&quot; not found; SQL statement:" />
      <item value="tiny" />
      <item value="small" />
      <item value="smallint" />
      <item value="tinyint" />
      <item value="操作" />
      <item value="operation" />
      <item value="compile" />
      <item value="implementation" />
      <item value="An {@link ExecutorService} for running {@link ForkJoinTask}s. * A {@code ForkJoinPool} provides the entry point for submissions * from non-{@code ForkJoinTask} clients, as well as management and * monitoring operations." />
      <item value="additional nanoseconds to sleep" />
      <item value="nanos" />
      <item value="Returns a new CompletionStage that, when this stage completes * normally, is executed using this stage's default asynchronous * execution facility, with this stage's result as the argument to * the supplied function." />
      <item value="then Apply Async" />
      <item value="then Accept" />
      <item value="then Accept Async" />
      <item value="Implementing this interface allows an object to be the target of * the &quot;for-each loop&quot; statement. See" />
      <item value="Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.zx.idc.ds.base.cus.mongodb.repository.UserInfoRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="Caused by: org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: expected single matching bean but found 3: baseDao,baseMongoDao,systemEnvironment" />
      <item value="No qualifying bean of type 'com.zx.idc.ds.base.cus.mongodb.repository.UserInfoRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.zx.idc.ds.base.cus.mongodb.dao.UserInfoRepository.findByName" />
      <item value="Creates a criterion using the {@literal $gte} operator." />
      <item value="Creates a criterion using a {@literal $regex} operator." />
      <item value="Creates a criterion using the given object as a pattern." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="701" />
        <entry key="ENGLISH" value="702" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="6" />
        <entry key="GALICIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CORSICAN" value="20" />
        <entry key="KURDISH" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LATVIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAGASY" value="3" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="SLOVENIAN" value="2" />
        <entry key="CEBUANO" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
</application>