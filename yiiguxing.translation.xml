<application>
  <component name="AppStorage">
    <histories>
      <item value="count" />
      <item value="offset" />
      <item value="original" />
      <item value="object" />
      <item value="created" />
      <item value="newly" />
      <item value="Initializes a newly created" />
      <item value="/** * Initializes a newly created {@code String} object so that it represents * the same sequence of characters as the argument; in other words, the * newly created string is a copy of the argument string. Unless an * explicit copy of {@code original} is needed, use of this constructor is * unnecessary since Strings are immutable. * * @param original * A {@code String} */" />
      <item value="/** * Initializes a newly created {@code String} object so that it represents * an empty character sequence. Note that use of this constructor is * unnecessary since Strings are immutable. */ public String() { this.value = &quot;&quot;.value; }" />
      <item value="Initializes a newly created {@code String} object so that it represents * an empty character sequence. Note that use of this constructor is * unnecessary since Strings are immutable." />
      <item value="use serialVersionUID from JDK 1.0.2 for interoperability" />
      <item value="Cache the hash code for the string" />
      <item value="The value is used for character storage" />
      <item value="The value is used for character storage." />
      <item value="Lee Boynton * @author Arthur van Hoff * @author Martin Buchholz * @author Ulf Zibis" />
      <item value="if this {@code String} represents the same * sequence of char values as the specified sequence, {@code * false} otherwise" />
      <item value="The sequence to compare this {@code String} against" />
      <item value="Compares this string to the specified {@code CharSequence}. The * result is {@code true} if and only if this {@code String} represents the * same sequence of char values as the specified sequence. Note that if the * {@code CharSequence} is a {@code StringBuffer} then the method * synchronizes on it." />
      <item value="Compares this string to the specified {@code StringBuffer}. The result * is {@code true} if and only if this {@code String} represents the same * sequence of characters as the specified {@code StringBuffer}. This method * synchronizes on the {@code StringBuffer}." />
      <item value="cal BDYS Price Via CD" />
      <item value="plane Type" />
      <item value="Active MQ" />
      <item value="cabin" />
      <item value="Si Sale Promo" />
      <item value="cabin Bill Confirm" />
      <item value="org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.rxliuli.mytimeline.module.user.service.UserService.selectList" />
      <item value="Invalid bound statement (not found): com.rxliuli.mytimeline.module.user.service.UserService.listForAll" />
      <item value="org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.rxliuli.mytimeline.module.user.service.UserServiceTest': Unsatisfied dependency expressed through field 'base'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: expected single matching bean but found 2: userServiceImpl,userService" />
      <item value="Unsatisfied dependency expressed through field 'base'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: expected single matching bean but found 2: userServiceImpl,userService" />
      <item value="get Si Sale Promo Billing List" />
      <item value="18:54:37.370 [main] ERROR o.s.t.c.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@15bfd87] to prepare test instance [com.yh.ss.modules.settle.inland.web.SiSaleReportControllerTest@55a1c291]" />
      <item value="Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@57f23557] to prepare test instance [com.yh.ss.modules.settle.inland.web.SiSaleReportControllerTest@2890c451" />
      <item value="- Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@7f416310] to prepare test instance [com.yh.ss.modules.settle.inland.web.SiSaleReportControllerTest@12d3a4e9]" />
      <item value="As of Spring Framework 4.2, use {@code @Rollback} or * {@code @Commit} at the class level and the {@code transactionManager} * qualifier in {@code @Transactional}." />
      <item value="{@code TransactionConfiguration} defines class-level metadata for configuring * transactional tests. * * &lt;p&gt;As of Spring Framework 4.0, this annotation may be used as a * &lt;em&gt;meta-annotation&lt;/em&gt; to create custom &lt;em&gt;composed annotations&lt;/em&gt;." />
      <item value="Invocation of init method failed; nested exception is java.lang.IllegalStateException: WebApplicationObjectSupport instance [ResourceHttpRequestHandler [locations=[class path resource [static/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@2987d0fa]]] does not run in a WebApplicationContext but in: org.springframework.context.support.GenericApplicationContext@442675e1: startup date [Thu Jun 21 18:38:55 CST 2018]; root of context hierarchy" />
      <item value="totla Fee" />
      <item value="order Id" />
      <item value="old Complete" />
      <item value="forward" />
      <item value="goback" />
      <item value="get Openchargedate" />
      <item value="get Total Amount" />
      <item value="start Station" />
      <item value="set Amount" />
      <item value="just for query" />
      <item value="Init Binder" />
      <item value="before Method Param" />
      <item value="before Method Data" />
      <item value="before" />
    </histories>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5e2600b87bd0fc78" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>