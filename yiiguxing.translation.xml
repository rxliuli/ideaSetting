<application>
  <component name="AppStorage">
    <histories>
      <item value="A common Spring annotation to declare that annotated elements can be {@code null} under * some circumstance. Leverages JSR 305 meta-annotations to indicate nullability in Java * to common tools with JSR 305 support and used by Kotlin to infer nullability of Spring API." />
      <item value="Return the property value associated with the given key, converted to the given * targetType (never {@code null})." />
      <item value="Return the property value associated with the given key, * or {@code defaultValue} if the key cannot be resolved." />
      <item value="Return the property value associated with the given key, * or {@code null} if the key cannot be resolved. * @param key the property name to resolve" />
      <item value="Returns an infinite sequential unordered stream where each element is * generated by the provided {@code LongSupplier}. This is suitable for * generating constant streams, streams of random elements, etc." />
      <item value="for Each Remaining" />
      <item value="A Spliterator specialized for {@code int} values." />
      <item value="if {@code true} then the returned stream is a parallel * stream; if {@code false} the returned stream is a sequential * stream." />
      <item value="parallel" />
      <item value="It is strongly recommended the spliterator report a characteristic of * {@code IMMUTABLE} or {@code CONCURRENT}, or be * &lt;a href=&quot;../Spliterator.html#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, * {@link #intStream(java.util.function.Supplier, int, boolean)} should be * used to reduce the scope of potential interference with the source. See * &lt;a href=&quot;package-summary.html#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for * more details." />
      <item value="* &lt;p&gt;The spliterator is only traversed, split, or queried for estimated size * after the terminal operation of the stream pipeline commences." />
      <item value="Creates a new sequential or parallel {@code IntStream} from a * {@code Spliterator.OfInt}." />
      <item value="load" />
      <item value="frequency" />
      <item value="频率" />
      <item value="Payload Root" />
      <item value="Response Payload" />
      <item value="Country Repository" />
      <item value="Country Endpoint" />
      <item value="The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured." />
      <item value="Unable to start web server; nested exception is org.springframework.context.ApplicationContextException: Unable to start ServletWebServerApplicationContext due to missing ServletWebServerFactory bean." />
      <item value="Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured." />
      <item value="Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'id' of 'class com.zx.idc.ds.base.cus.entity.BaseCustomer' with value '1090194151883444226' Cause: java.lang.IllegalArgumentException: argument type mismatch" />
      <item value="with value '1090194151883444226' Cause: java.lang.IllegalArgumentException: argument type mismatch" />
      <item value="Illegal Argument Exception" />
      <item value="Unsatisfied dependency expressed through field 'base'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: expected single matching bean but found 3: systemEnvironment,contextParameters,contextAttributes" />
      <item value="java.lang.NoSuchMethodError: org.yaml.snakeyaml.LoaderOptions.setAllowDuplicateKeys" />
      <item value="Caused by: java.lang.IllegalStateException: SpringJUnit4ClassRunner requires JUnit 4.12 or higher." />
      <item value="java.lang.IllegalArgumentException: Cannot instantiate factory class: org.springframework.boot.test.context.DefaultTestExecutionListenersPostProcessor" />
      <item value="camel To Underline" />
      <item value="underline To Camel 2" />
      <item value="Sys Domain Category" />
      <item value="Sys Domain Catetry" />
      <item value="Sys Domain Catetory" />
      <item value="slabel" />
      <item value="permission" />
      <item value="keyword" />
      <item value="priority" />
      <item value="standard" />
      <item value="business Type" />
      <item value="setmode" />
      <item value="security Owner" />
      <item value="Security Owner" />
      <item value="安全责任人" />
      <item value="安全" />
      <item value="securre People" />
      <item value="securres People" />
      <item value="securres" />
      <item value="people" />
      <item value="espeople" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="211" />
        <entry key="ENGLISH" value="212" />
        <entry key="FRENCH" value="1" />
        <entry key="GALICIAN" value="1" />
        <entry key="CORSICAN" value="20" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
</application>