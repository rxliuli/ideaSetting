<application>
  <component name="AppStorage">
    <histories>
      <item value="webkit - scrollbar - track - piece" />
      <item value="scrollbar" />
      <item value="to {[/common/redirect],methods=[GET]}: There is already 'baseController' bean method public java.lang.String com.rxliuli.example.springbootexample.web.BaseController.redirect(java.lang" />
      <item value="java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'freemarkerController' method public java.lang.String com.rxliuli.example.springbootexample.web.BaseController.redirect(java.lang.String)" />
      <item value="There is already 'baseController' bean method public java.lang.String com.rxliuli.example.springbootexample.web.BaseController.redirect(java.lang.String) mapped." />
      <item value="java.lang.String com.rxliuli.example.springbootexample.web.BaseController.redirect(java.lang.String)" />
      <item value="Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'freemarkerController' method" />
      <item value="Web Mvc Auto Configuration $ Enable Web Mvc Configuration" />
      <item value="defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'freemarkerController' method" />
      <item value="java.lang.IllegalStateException: Failed to load ApplicationContext" />
      <item value="Actual" />
      <item value="Expected" />
      <item value="rg.junit.internal.runners.rules.ValidationError: The @Rule 'globalTimeout' must be public." />
      <item value="args arguments to use when creating a bean instance using explicit arguments * (only applied when creating a new instance as opposed to retrieving an existing one)" />
      <item value="Return an instance, which may be shared or independent, of the specified bean. * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments, * overriding the specified default arguments (if any) in the bean definition. * @param name the name of the bean to retrieve * @param args arguments to use when creating a bean instance using explicit arguments * (only applied when creating a new instance as opposed to retrieving an existing one) * @return an instance of the bean" />
      <item value="An exception has occurred for use SpringBeanUtil get a Bean" />
      <item value="An exception has occurred" />
      <item value="发生了异常" />
      <item value="获取" />
      <item value="使用" />
      <item value="使用 SpringBeanUtil 获取 Bean 发生了异常" />
      <item value="org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.rxliuli.example.springbootexample.entity.UserLogin' available" />
      <item value="org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction - Setting JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] read-only" />
      <item value="DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager.getTransaction - Creating new transaction with name [com.rxliuli.example.springbootexample.service.impl.UserInfoServiceImpl.listForUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly,-Exception 2018-06-02 01:29:29,260 [main] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin - Acquired Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] for JDBC transaction" />
      <item value="DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] after transaction" />
      <item value="DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection - Returning JDBC Connection to DataSource" />
      <item value="2018-06-02 01:26:22,710 [main] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit - Committing JDBC transaction on Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] 2018-06-02 01:26:22,711 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction - Resetting read-only flag of JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] 2018-06-02 01:26:22,711 [main] DEBUG org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion - Releasing JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a] after transaction 2018-06-02 01:26:22,711 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection - Returning JDBC Connection to DataSource" />
      <item value="DEBUG org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction - Resetting read-only flag of JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@742aa00a]" />
      <item value="java.lang.AssertionError: Expected test to throw an instance of org.springframework.dao.TransientDataAccessResourceExceptio" />
      <item value="Transient Data Access Resource Exception" />
      <item value="'org.aspectj.lang.annotation.Aspect', 'org.aspectj.lang.reflect.Advice'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition) - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)" />
      <item value="Enable Aspect J Auto Proxy" />
      <item value="org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration.afterSingletonsInstantiated - Could not start embedded management container on different port (management endpoints are still available through JMX)" />
      <item value="Dynamic" />
      <item value="The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server. at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_171] at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_171] at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_171] at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_171]" />
      <item value="Communications link failure" />
      <item value="com.alibaba.druid.pool.DruidDataSource.run - create connection SQLException, url:" />
      <item value="endpoints" />
      <item value="sensitive" />
      <item value="validation Query Check" />
      <item value="com.alibaba.druid.pool.DruidDataSource.validationQueryCheck - testWhileIdle is true, validationQuery not set" />
      <item value="ERROR com.alibaba.druid.pool.DruidDataSource.validationQueryCheck - testWhileIdle is true, validationQuery not set" />
      <item value="No Class Def Found Error" />
      <item value="NoClassDefFoundError: org/springframework/boot/context/embedded/ServletRegistrationBean at java.lang.Class.getDeclaredMethods0(Native Method)" />
      <item value="2018-05-31 22:12:30 JRebel: ERROR An error occured in a service request listener 'org.zeroturnaround.javarebel.service.ServiceRequestUtil$WeakServiceRequestListener@706b8904' with priority 'UNSPECIFIED' while handling before request event: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dbCountHealthIndicator' defined in com.rxliuli.example.springbootexample.config.DbCountAutoConfiguration: Unsatisfied dependency expressed through method 'dbCountHealthIndicator' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'java.util.Collection&lt;org.springframework.data.repository.CrudRepository&lt;?, ?&gt;&gt;' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}" />
      <item value="Db Count Health Indicator" />
      <item value="delimiter" />
      <item value="management . server . port" />
      <item value="Enable Prometheus Endpoint" />
      <item value="Enable Spring Boot Metrics Collector" />
    </histories>
  </component>
</application>