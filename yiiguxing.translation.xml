<application>
  <component name="AppStorage">
    <histories>
      <item value="let" />
      <item value="Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.rxliuli.mytimeline.dao.module.user.UserDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.rxliuli.mytimeline.dao.module.user.UserDao.listByAll" />
      <item value="head portrait" />
      <item value="sex Woman" />
      <item value="sex Woan" />
      <item value="女" />
      <item value="sex Wu Man" />
      <item value="sex Wo Man" />
      <item value="sex Man" />
      <item value="Error querying database. Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'head_portrait' in 'field list'" />
      <item value="Unsatisfied dependency expressed through field 'controller'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: expected single matching bean but found 3: commonController,userController,indexController" />
      <item value="Final Memory: 46M/290M" />
      <item value="Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.18.1:test (default-test) on project gui: There are test failures." />
      <item value="Failed to execute goal on project gui: Could not resolve dependencies for project com.rxliuli:gui:jar:0.0.1-SNAPSHOT: Could not find artifact com.rxliuli:service:jar:0.0.1-SNAPSHOT -&gt; [Help 1]" />
      <item value="Unknown column 'head_portrait' in 'field list'" />
      <item value="expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="java.lang.IllegalStateException: Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test" />
      <item value="Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.rxliuli.mytimeline.dao.user.UserDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.rxliuli.mytimeline.dao.user.UserDaoTest': Unsatisfied dependency expressed through field 'userDao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.rxliuli.mytimeline.dao.user.UserDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="you need to use @ContextConfiguration or" />
      <item value="lobalExceptionController - Failed to instantiate [java.util.List]: Specified class is an interface" />
      <item value="ERROR c.y.s.b.w.GlobalExceptionController - Failed to instantiate [java.util.List]: Specified class is an interface" />
      <item value="billing" />
      <item value="insert Batch" />
      <item value="Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function. * @param thisArg The object to be used as the this object. * @param argArray A set of arguments to be passed to the function." />
      <item value="form Util" />
      <item value="forms" />
      <item value="form" />
      <item value="empty To Else" />
      <item value="empty Or Else" />
      <item value="empty To Zero" />
      <item value="from" />
      <item value="data" />
      <item value="Invoke the handler method with the given argument values." />
      <item value="search confirm" />
      <item value="first" />
      <item value="bill Confirm And Generate Inland Sales Report" />
      <item value="生成" />
      <item value="bill Confirm And Grenertor" />
      <item value="账单确认并生成销售报告" />
      <item value="For more details see &lt;code&gt;PropertyUtilsBean&lt;/code&gt;.&lt;/p&gt;" />
      <item value="&lt;p&gt;Copy property values from the &quot;origin&quot; bean to the &quot;destination&quot; bean * for all cases where the property names are the same (even though the * actual getter and setter methods might have been customized via * &lt;code&gt;BeanInfo&lt;/code&gt; classes).&lt;/p&gt;" />
      <item value="if the object is cloneable and the clone operation fails" />
      <item value="fails" />
      <item value="the clone if the object implements {@link Cloneable} otherwise {@code null}" />
      <item value="obj the object to clone, null returns null" />
      <item value="the type of the object" />
      <item value="Clone an object" />
      <item value="clone If Possible" />
    </histories>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5e2600b87bd0fc78" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>