<application>
  <component name="AppStorage">
    <histories>
      <item value="Decrements the count of the latch, releasing all waiting threads if * the count reaches zero. * * &lt;p&gt;If the current count is greater than zero then it is decremented. * If the new count is zero then all waiting threads are re-enabled for * thread scheduling purposes." />
      <item value="* * &lt;p&gt;If the current count equals zero then nothing happens. */" />
      <item value="* &lt;p&gt;If the current count is greater than zero then it is decremented. * If the new count is zero then all waiting threads are re-enabled for * thread scheduling purposes. *" />
      <item value="Decrements the count of the latch, releasing all waiting threads if * the count reaches zero." />
      <item value="count Down" />
      <item value="locale" />
      <item value="date Regular Expression" />
      <item value="MODIFY CEILING" />
      <item value="RANGE WEEK MONDAY" />
      <item value="Sets the months field to a date returning a new object. * The original {@code Date} is unchanged." />
      <item value="ignore Null" />
      <item value="select Flight Group By Date" />
      <item value="policy Id" />
      <item value="if a terminal operation were to be executed, * would execute in parallel. Calling this method after invoking an * terminal stream operation method may yield unpredictable results." />
      <item value="Returns whether this stream, if a terminal operation were to be executed, * would execute in parallel. Calling this method after invoking an * terminal stream operation method may yield unpredictable results." />
      <item value="init Data Table Pro" />
      <item value="account Period" />
      <item value="laydate" />
      <item value="search openchargedate Begin" />
      <item value="generate With Salt" />
      <item value="The value StringUtils.substring(flightnumber, 0, 2) assigned to 'airline' is never used less... (Ctrl+F1) This inspection points out the cases where a variable value is never used after its assignment, i.e.:  - the variable never gets read after assignment OR  - the value is always overwritten with another assignment before the next variable read OR  - the variable initializer is redundant (for one of the above two reasons)" />
      <item value="airline" />
      <item value="auto - commit - interval" />
      <item value="A synchronization aid that allows one or more threads to wait until * a set of operations being performed in other threads completes." />
      <item value="Count Down Latch" />
      <item value="checksum" />
      <item value="this is a message for language of chinese." />
      <item value="&quot;this is a message for language of chinese.&quot;" />
      <item value="auto" />
      <item value="memory" />
      <item value="16384" />
      <item value="deserializer" />
      <item value="earliest" />
      <item value="reset" />
      <item value="interval" />
      <item value="o.a.zookeeper.server.ZooKeeperServer : ZKShutdownHandler is not registered, so ZooKeeper server won't take any action on ERROR or SHUTDOWN server state changes" />
      <item value="Send the data to the provided topic with the provided key and no partition." />
      <item value="topic the topic." />
      <item value="failure Callback" />
      <item value="on Failure" />
      <item value="/** * Register the given {@code ListenableFutureCallback}. * @param callback the callback to register */" />
      <item value="Listenable Future" />
      <item value="listen" />
      <item value="org.apache.zookeeper.server.ServerCnxn$EndOfStreamException: Unable to read additional data from client sessionid 0x163f8465c7d0000, likely client has closed socket" />
      <item value="caught end of stream exception" />
      <item value="org.apache.zookeeper.server.ServerCnxn$EndOfStreamException: Unable to read additional data from client" />
      <item value="Kafka Embedded" />
      <item value="Auto-commit of offsets {rxliuli-0=OffsetAndMetadata{offset=4, metadata=''}} failed for group test-consumer-group: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing the session timeout or by reducing the maximum size of batches returned in poll() with max.poll.records." />
      <item value="[2018-06-13 15:20:45] JRebel enabled automatic compilation for this project. You can disable this setting from Help &gt; JRebel &gt; Configuration &gt; Advanced &gt; Miscellaneous." />
      <item value="spring . kafka . consumer . auto - commit - interval" />
    </histories>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5e2600b87bd0fc78" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>