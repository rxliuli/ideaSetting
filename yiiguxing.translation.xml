<application>
  <component name="AppStorage">
    <histories>
      <item value="The driver has not received any packets from the server." />
      <item value="The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server." />
      <item value="Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary." />
      <item value="com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server." />
      <item value="My SQL Non Transient Connection Exception" />
      <item value="Mon Oct 15 15:57:51 CST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification." />
      <item value="The last packet sent successfully to the server was 736 milliseconds ago." />
      <item value="Communications link failure" />
      <item value="分段" />
      <item value="connect Failed" />
      <item value="Socket Timeout Exception" />
      <item value="Note that this method may be called a second time for a single HTTP response if the response * includes a trailer. For this obscure HTTP feature, {@code cookies} contains only the trailer's * cookies." />
      <item value="Saves {@code cookies} from an HTTP response to this store according to this jar's policy." />
      <item value="The {@code Desktop} class allows a Java application to launch * associated applications registered on the native desktop to handle * a {@link java.net.URI} or a file." />
      <item value="Tests whether this class is supported on the current platform. * If it's supported, use {@link #getDesktop()} to retrieve an * instance. *" />
      <item value="is Desktop Supported" />
      <item value="文件夹" />
      <item value="Open Floder" />
      <item value="the access &lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt;" />
      <item value="seek" />
      <item value="&lt;code&gt;true&lt;/code&gt; if and only if the directory was created, * along with all necessary parent directories; &lt;code&gt;false&lt;/code&gt; * otherwise" />
      <item value="Returns the current time in milliseconds. Note that * while the unit of time of the return value is a millisecond, * the granularity of the value depends on the underlying * operating system and may be larger. For example, many * operating systems measure time in units of tens of * milliseconds." />
      <item value="java.time.DateTimeException: Unable to obtain LocalDateTime from TemporalAccessor: 2018-09-04T23:03:55.715Z of type java.time.Instant" />
      <item value="A standard set of date periods units." />
      <item value="A field of date-time, such as month-of-year or hour-of-minute. * &lt;p&gt; * Date and time is expressed using fields which partition the time-line into something * meaningful for humans. Implementations of this interface represent those fields. * &lt;p&gt;" />
      <item value="A standard set of fields. * &lt;p&gt; * This set of fields provide field-based access to manipulate a date, time or date-time. * The standard set of fields can be extended by implementing {@link TemporalField}. * &lt;p&gt; * These fields are intended to be applicable in multiple calendar systems. * For example, most non-ISO calendar systems define dates as a year, month and day, * just with slightly different rules. * The documentation of each field explains how it operates. *" />
      <item value="The hour-of-day. * &lt;p&gt; * This counts the hour within the day, from 0 to 23. * This is the hour that would be observed on a standard 24-hour digital clock. * This field has the same meaning for all calendar systems. * &lt;p&gt; * When parsing this field it behaves equivalent to the following: * The value is validated in strict and smart mode but not in lenient mode. * The field is combined with {@code MINUTE_OF_HOUR}, {@code SECOND_OF_MINUTE} and * {@code NANO_OF_SECOND} to produce a {@code LocalTime}. * In lenient mode, any excess days are added to the parsed date, or * made available via {@link java.time.format.DateTimeFormatter#parsedExcessDays()}." />
      <item value="range" />
      <item value="Gets the set of units supported by this duration. * &lt;p&gt; * The supported units are {@link ChronoUnit#SECONDS SECONDS}, * and {@link ChronoUnit#NANOS NANOS}. * They are returned in the order seconds, nanos. * &lt;p&gt; * This set can be used in conjunction with {@link #get(TemporalUnit)} * to access the entire state of the duration." />
      <item value="Gets the set of units supported by this duration." />
      <item value="Gets the value of the requested unit. * &lt;p&gt; * This returns a value for each of the two supported units, * {@link ChronoUnit#SECONDS SECONDS} and {@link ChronoUnit#NANOS NANOS}. * All other units throw an exception. * * @param unit the {@code TemporalUnit} for which to return the value * @return the long value of the unit * @throws DateTimeException if the unit is not supported * @throws UnsupportedTemporalTypeException if the unit is not supported" />
      <item value="Unsupported unit: Hours" />
      <item value="org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0" />
      <item value="org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [select * from user where id = #{id}]; Parameter index out of range (1 &gt; number of parameters, which is 0).; nested exception is java.sql.SQLException: Parameter index out of range (1 &gt; number of parameters, which is 0)." />
      <item value="Failed to execute SQL script statement" />
      <item value="Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory" />
      <item value="Failed to load ApplicationContext" />
      <item value="Here for backwards compatibility with MM.MySQL" />
      <item value="Chrono Unit" />
      <item value="A standard set of date periods units. * &lt;p&gt;" />
      <item value="更大" />
      <item value="This returns a {@code ChronoLocalDateTime} formed from this date at the specified time. * All possible combinations of date and time are valid." />
      <item value="Combines this date with a time to create a {@code ChronoLocalDateTime}." />
      <item value="at Time" />
      <item value="minus" />
      <item value="put If Absent" />
      <item value="Web Socket Annotation Method Message Handler" />
      <item value="Web Socket Stomp Client" />
      <item value="Sub Protocol Handler" />
      <item value="Stomp Sub Protocol Error Handler" />
    </histories>
  </component>
</application>