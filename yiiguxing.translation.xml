<application>
  <component name="AppStorage">
    <histories>
      <item value="before Handshake" />
      <item value="计算" />
      <item value="list Bet Key Count By Team Map By User Record" />
      <item value="Feature is disabled by default, so default output mode is used; this generally * depends on how {@link BigDecimal} has been created." />
      <item value="Feature that determines whether {@link java.math.BigDecimal} entries are * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent * values to be written using scientific notation." />
      <item value="Feature that determines whether {@link java.math.BigDecimal} entries are * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent * values to be written using scientific notation. *&lt;p&gt; * Feature is disabled by default, so default output mode is used; this generally * depends on how {@link BigDecimal} has been created." />
      <item value="Feature that determines whether {@link java.math.BigDecimal} entries are * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent * values to be written using scientific notation. *&lt;p&gt; * Feature is disabled by default, so default output mode is used; this generally * depends on how {@link BigDecimal} has been created. * * @since 2.3" />
      <item value="enable" />
      <item value="A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, * such as {@code 2007-12-03T10:15:30+01:00}. * &lt;p&gt;" />
      <item value="at Zone Same Instant" />
      <item value="A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, * such as {@code 2007-12-03T10:15:30+01:00}." />
      <item value="to Zoned Date Time" />
      <item value="Offset Date Time" />
      <item value="time To Idle Seconds" />
      <item value="time To Live Seconds" />
      <item value="1000" />
      <item value="max Elements In Memory" />
      <item value="The bean name of the custom {@link org.springframework.cache.interceptor.KeyGenerator} * to use. * &lt;p&gt;Mutually exclusive with the {@link #key} attribute." />
      <item value="300" />
      <item value="The dependencies of some of the beans in the application context form a cycle:" />
      <item value="now Even Bigger" />
      <item value="local Time Plus Hour One" />
      <item value="time Lengthen" />
      <item value="ERROR org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler.handleError - Unexpected error occurred in scheduled task." />
      <item value="2018-08-31 19:27:07,174 [main] DEBUG org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report - Application failed to start due to an exception" />
      <item value="send Win Bet Record" />
      <item value="set Time Lengthen" />
      <item value="GAME STATU HAS ENDED" />
      <item value="calculation Prize Pool Allocation" />
      <item value="分配" />
      <item value="calculation Prize Pool" />
      <item value="phone Last Four" />
      <item value="后四位" />
      <item value="phone 后四位" />
      <item value="WRITE BIGDECIMAL AS PLAIN" />
      <item value="{@link com.fasterxml.jackson.core.JsonGenerator.Feature#WRITE_BIGDECIMAL_AS_PLAIN} instead * (using {@link ObjectWriter#with(com.fasterxml.jackson.core.JsonGenerator.Feature)})." />
      <item value="Feature that determines whether {@link java.math.BigDecimal} entries are * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent * values to be written using scientific notation. *&lt;p&gt; * NOTE: since this feature typically requires use of * {@link com.fasterxml.jackson.core.JsonGenerator#writeNumber(String)} * it may cause compatibility problems since not all {@link com.fasterxml.jackson.core.JsonGenerator} * implementations support such mode of output: usually only text-based formats * support it. *&lt;p&gt; * Feature is disabled by default. * * @deprecated Since 2.5: use {@link com.fasterxml.jackson.core.JsonGenerator.Feature#WRITE_BIGDECIMAL_AS_PLAIN} instead * (using {@link ObjectWriter#with(com.fasterxml.jackson.core.JsonGenerator.Feature)})." />
      <item value="Feature is disabled by default." />
      <item value="* {@link com.fasterxml.jackson.core.JsonGenerator#writeNumber(String)} * it may cause compatibility problems since not all {@link com.fasterxml.jackson.core.JsonGenerator} * implementations support such mode of output: usually only text-based formats * support it." />
      <item value="NOTE: since this feature typically requires use of" />
      <item value="Feature that determines whether {@link java.math.BigDecimal} entries are * serialized using {@link java.math.BigDecimal#toPlainString()} to prevent * values to be written using scientific notation. *&lt;p&gt;" />
      <item value="count Bet Key By User Record And Team" />
      <item value="statu" />
      <item value="bet Key By Team" />
      <item value="Or, by using a builder accessible via static methods:" />
      <item value="Can also be used in Spring MVC, as the return value from a @Controller method:" />
      <item value="&lt;pre class=&quot;code&quot;&gt; * ResponseEntity&amp;lt;String&amp;gt; entity = template.getForEntity(&quot;http://example.com&quot;, String.class); * String body = entity.getBody(); * MediaType contentType = entity.getHeaders().getContentType(); * HttpStatus statusCode = entity.getStatusCode(); * &lt;/pre&gt;" />
      <item value="Extension of {@link HttpEntity} that adds a {@link HttpStatus} status code. * Used in {@code RestTemplate} as well {@code @Controller} methods." />
      <item value="3000000000" />
      <item value="结束" />
    </histories>
  </component>
</application>