<application>
  <component name="AppStorage">
    <histories>
      <item value="&quot;http://localhost:&quot; + port + uri, request" />
      <item value="Unsatisfied dependency expressed through field 'servletRegistrationBean'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'org.springframework.boot.web.servlet.ServletRegistrationBean&lt;?&gt;' available: expected single matching bean but found 2: messageDispatcherServlet,dispatcherServletRegistration" />
      <item value="marshal Send And Receive" />
      <item value="No unmarshaller registered. Check configuration of WebServiceTemplate." />
      <item value="org.springframework.ws.client.Web Service Transport Exception" />
      <item value="org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is javax.xml.bind.JAXBException: class com.howtodoinjava.xml.school.StudentDetailRequest以及其任何超类对此上下文都是未知的。" />
      <item value="after Properties Set" />
      <item value="No endpoint mapping found for [SaajSoapMessage {http://www.howtodoinjava.com/xml/school}StudentDetailRequest]" />
      <item value="Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: class path resource [student.xsd] has no targetNamespace" />
      <item value="java.lang.IllegalArgumentException: class path resource [student.xsd] has no targetNamespace" />
      <item value="The specified user settings file does not exist: D:\Program\Apache\Maven\.m2\settings.xml" />
      <item value="wsdl 4 j" />
      <item value="Properties rootFilePath can not empty" />
      <item value="Properties" />
      <item value="rootFilePath can not empty" />
      <item value="不能" />
      <item value="rootFilePath is not empty" />
      <item value="empty" />
      <item value="long To Ip(&quot;127.0.0.1&quot;)" />
      <item value="Text '36672' could not be parsed at index 2" />
      <item value="Text '2018-12-11 10:11:12' could not be parsed at index 10" />
      <item value="plain" />
      <item value="linkplain" />
      <item value="* The returned formatter has no override chronology or zone. * It uses {@link ResolverStyle#SMART SMART} resolver style." />
      <item value="the pattern to use, not null" />
      <item value="* Creates a formatter using the specified pattern. * &lt;p&gt; * This method will create a formatter based on a simple * &lt;a href=&quot;#patterns&quot;&gt;pattern of letters and symbols&lt;/a&gt; * as described in the class documentation. * For example, {@code d MMM uuuu} will format 2011-12-03 as '3 Dec 2011'." />
      <item value="Creates a formatter using the specified pattern. * &lt;p&gt; * This method will create a formatter based on a simple * &lt;a href=&quot;#patterns&quot;&gt;pattern of letters and symbols&lt;/a&gt; * as described in the class documentation. * For example, {@code d MMM uuuu} will format 2011-12-03 as '3 Dec 2011'. * &lt;p&gt;" />
      <item value="java.time.format.DateTimeParseException: Text '2018-12-11 10:11:12' could not be parsed: Unable to obtain LocalDateTime from TemporalAccessor: {MilliOfSecond=0, MicroOfSecond=0, SecondOfMinute=12, MinuteOfHour=11, NanoOfSecond=0, HourOfAmPm=10},ISO resolved to 2018-12-11 of type java.time.format.Parsed" />
      <item value="pattern" />
      <item value="Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2018-12-11 10:11:12'; nested exception is java.lang.IllegalArgumentException" />
      <item value="java.lang.AssertionError: Expecting actual not to be null" />
      <item value="birthday" />
      <item value="balance" />
      <item value="余额" />
      <item value="remerming" />
      <item value="remaming" />
      <item value="Failed to retrieve PlatformTransactionManager for @Transactional test:" />
      <item value="Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test" />
      <item value="A common Spring annotation to declare that annotated elements can be {@code null} under * some circumstance. Leverages JSR 305 meta-annotations to indicate nullability in Java * to common tools with JSR 305 support and used by Kotlin to infer nullability of Spring API." />
      <item value="Return the property value associated with the given key, converted to the given * targetType (never {@code null})." />
      <item value="Return the property value associated with the given key, * or {@code defaultValue} if the key cannot be resolved." />
      <item value="Return the property value associated with the given key, * or {@code null} if the key cannot be resolved. * @param key the property name to resolve" />
      <item value="Returns an infinite sequential unordered stream where each element is * generated by the provided {@code LongSupplier}. This is suitable for * generating constant streams, streams of random elements, etc." />
      <item value="for Each Remaining" />
      <item value="A Spliterator specialized for {@code int} values." />
      <item value="if {@code true} then the returned stream is a parallel * stream; if {@code false} the returned stream is a sequential * stream." />
      <item value="parallel" />
      <item value="It is strongly recommended the spliterator report a characteristic of * {@code IMMUTABLE} or {@code CONCURRENT}, or be * &lt;a href=&quot;../Spliterator.html#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, * {@link #intStream(java.util.function.Supplier, int, boolean)} should be * used to reduce the scope of potential interference with the source. See * &lt;a href=&quot;package-summary.html#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for * more details." />
      <item value="* &lt;p&gt;The spliterator is only traversed, split, or queried for estimated size * after the terminal operation of the stream pipeline commences." />
      <item value="Creates a new sequential or parallel {@code IntStream} from a * {@code Spliterator.OfInt}." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="248" />
        <entry key="ENGLISH" value="249" />
        <entry key="FRENCH" value="1" />
        <entry key="GALICIAN" value="1" />
        <entry key="CORSICAN" value="20" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
</application>