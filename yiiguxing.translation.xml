<application>
  <component name="AppStorage">
    <option name="lastSourceLanguage" value="AUTO" />
    <option name="lastTargetLanguage" value="CHINESE" />
    <histories>
      <item value="Audit Failure Pass Auth" />
      <item value="DEFAULT ENCODE" />
      <item value="increase Integral" />
      <item value="shop User" />
      <item value="platform Income Amount" />
      <item value="integral" />
      <item value="increase Balance" />
      <item value="increase Freeze Balance" />
      <item value="shop Return Money" />
      <item value="cal Shall Actually Return Diff" />
      <item value="took" />
      <item value="Failed" />
      <item value="/** * Retrieves, but does not remove, the head of this queue, * or returns {@code null} if this queue is empty." />
      <item value="Retrieves and removes the head of this queue, * or returns {@code null} if this queue is empty." />
      <item value="Retrieves and removes the head of this queue. This method differs * from {@link #poll poll} only in that it throws an exception if this * queue is empty." />
      <item value="* Returns the number of additional elements that this queue can ideally * (in the absence of memory or resource constraints) accept without * blocking, or {@code Integer.MAX_VALUE} if there is no intrinsic" />
      <item value="Retrieves and removes the head of this queue, waiting up to the * specified wait time if necessary for an element to become available." />
      <item value="Removes a single instance of the specified element from this queue, * if it is present. More formally, removes an element {@code e} such * that {@code o.equals(e)}, if this queue contains one or more such * elements." />
      <item value="* Returns the number of additional elements that this queue can ideally * (in the absence of memory or resource constraints) accept without * blocking, or {@code Integer.MAX_VALUE} if there is no intrinsic * limit." />
      <item value="Returns the number of additional elements that this queue can ideally * (in the absence of memory or resource constraints) accept without * blocking, or {@code Integer.MAX_VALUE} if there is no intrinsic * limit." />
      <item value="Returns the number of additional elements that this queue can ideally * (in the absence of memory or resource constraints) accept without" />
      <item value="Removes a single instance of the specified element from this queue, * if it is present. More formally, removes an element {@code e} such * that {@code o.equals(e)}, if this queue contains one or more such" />
      <item value="Returns the number of additional elements that this queue can ideally" />
      <item value="Retrieves and removes the head of this queue, waiting if necessary * until an element becomes available." />
      <item value="/** * Inserts the specified element into this queue if it is possible to do * so immediately without violating capacity restrictions, returning * {@code true} upon success and {@code false} if no space is currently * available. When using a capacity-restricted queue, this method is * generally preferable to {@link #add}, which can fail to insert an * element only by throwing an exception. * * @param e the element to add * @return {@code true} if the element was added to this queue, else * {@code false} * @throws ClassCastException if the class of the specified element * prevents it from being added to this queue * @throws NullPointerException if the specified element is null * @throws IllegalArgumentException if some property of the specified * element prevents it from being added to this queue" />
      <item value="Not Serializable Exception" />
      <item value="status haveread" />
      <item value="DB Structure" />
      <item value="forward" />
      <item value="Spring Java Injection Points Autowiring Inspection" />
      <item value="instance representing the primitive type" />
      <item value="AUDIT STATE SUCCESS" />
      <item value="AUDIT STATE FAILURE" />
      <item value="net.sourceforge.tess4j.TesseractException: java.lang.RuntimeException: com/sun/jna/Function$PointerArray" />
      <item value="Could not initialize class com.zx.edse.common.config.structure.DBStructure" />
      <item value="Failed to invoke public com.zx.edse.common.system.entity.SysUsers() with no args" />
      <item value="No Class Def Found Error" />
      <item value="serialization Queue" />
      <item value="deserialization Queue" />
      <item value="结束" />
      <item value="delete Directory" />
      <item value="Deletes a file, never throwing an exception. If file is a directory, delete it and all sub-directories." />
      <item value="delete Quietly" />
      <item value="force Delete" />
      <item value="gson From" />
      <item value="${ gson . version }" />
      <item value="serialization Dat" />
      <item value="com . zx . edse . ds . taskrepository . entity . Doc Personal Publish Task" />
      <item value="Array Deque" />
      <item value="dependencies" />
    </histories>
  </component>
</application>