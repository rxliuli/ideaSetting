<application>
  <component name="AppStorage">
    <histories>
      <item value="file Suffix" />
      <item value="file Subbix" />
      <item value="file Subfuix" />
      <item value="Unsatisfied Link Error" />
      <item value="update Invite Message Status" />
      <item value="Reapply" />
      <item value="refuse" />
      <item value="refuse Reapply" />
      <item value="reapply Audit" />
      <item value="STATUS REFUSE" />
      <item value="get Sender" />
      <item value="mail Entry To User Mail" />
      <item value="subject" />
      <item value="receiver Array" />
      <item value="receiver List" />
      <item value="remove Parentheses" />
      <item value="get Body Part" />
      <item value="get Is Download Attatch" />
      <item value="html" />
      <item value="plain" />
      <item value="alternative" />
      <item value="related" />
      <item value="decode Text" />
      <item value="save Attach Ment" />
      <item value="edse . file . download . url" />
      <item value="the search criterion" />
      <item value="This implementation invokes * &lt;code&gt;search(term, getMessages())&lt;/code&gt;, to apply the search * over all the messages in this folder. Providers that can implement * server-side searching might want to override this method to provide * a more efficient implementation. *" />
      <item value="Search this Folder for messages matching the specified * search criterion. Returns an array containing the matching * messages . Returns an empty array if no matches were found. &lt;p&gt;" />
      <item value="* Folders can contain Messages, other Folders or both, thus providing * a tree-like hierarchy rooted at the Store's default folder. (Note * that some Folder implementations may not allow both Messages and * other Folders in the same Folder).&lt;p&gt; *" />
      <item value="Folder is an abstract class that represents a folder for mail * messages. Subclasses implement protocol specific Folders.&lt;p&gt;" />
      <item value="* The effect of opening multiple connections to the same folder * on a specifc Store is implementation dependent. Some implementations * allow multiple readers, but only one writer. Others allow * multiple writers as well as readers." />
      <item value="* If this folder is opened successfully, an OPENED ConnectionEvent * is delivered to any ConnectionListeners registered on this" />
      <item value="Open this Folder. This method is valid only on Folders that * can contain Messages and that are closed. &lt;p&gt;" />
      <item value="get Last Update Time" />
      <item value="This class models the comparison operator. This is an abstract * class; subclasses implement comparisons for different datatypes" />
      <item value="Message SentDate." />
      <item value="Sent" />
      <item value="This class implements comparisons for the Message SentDate." />
      <item value="the Comparison type" />
      <item value="Sent Date Term" />
      <item value="find Inbox By Last Date" />
      <item value="time Picker" />
      <item value="daterangepicker Init" />
      <item value="init Complete" />
      <item value="manufactory" />
      <item value="Illegal Argument Exception" />
      <item value="unknown property [originFileName]" />
      <item value="Parsing" />
      <item value="org . elasticsearch . index . mapper . Mapper Parsing Exception" />
      <item value="相对路径" />
    </histories>
  </component>
</application>